<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="Projectiles\**" />
    <EmbeddedResource Remove="Projectiles\**" />
    <None Remove="Projectiles\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Mono.Cecil" Version="0.11.1" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="0Harmony">
      <HintPath>libs\0Harmony.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Ak.Wwise.Api.WAAPI">
      <HintPath>libs\Ak.Wwise.Api.WAAPI.dll</HintPath>
    </Reference>
    <Reference Include="AK.Wwise.Unity.API">
      <HintPath>libs\AK.Wwise.Unity.API.dll</HintPath>
    </Reference>
    <Reference Include="AK.Wwise.Unity.API.WwiseTypes">
      <HintPath>libs\AK.Wwise.Unity.API.WwiseTypes.dll</HintPath>
    </Reference>
    <Reference Include="AK.Wwise.Unity.MonoBehaviour">
      <HintPath>libs\AK.Wwise.Unity.MonoBehaviour.dll</HintPath>
    </Reference>
    <Reference Include="AK.Wwise.Unity.Timeline">
      <HintPath>libs\AK.Wwise.Unity.Timeline.dll</HintPath>
    </Reference>
    <Reference Include="AncientScepter">
      <HintPath>libs\AncientScepter.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="BepInEx">
      <HintPath>libs\BepInEx.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="BepInEx.Harmony">
      <HintPath>libs\BepInEx.Harmony.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="BepInEx.MonoMod.Loader">
      <HintPath>libs\BepInEx.MonoMod.Loader.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="BepInEx.Preloader">
      <HintPath>libs\BepInEx.Preloader.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="com.unity.multiplayer-hlapi.Runtime">
      <HintPath>libs\com.unity.multiplayer-hlapi.Runtime.dll</HintPath>
    </Reference>
    <Reference Include="ExtraSkillSlots">
      <HintPath>..\..\RoR2-FixVoidFog-Mod\src\libs\ExtraSkillSlots.dll</HintPath>
    </Reference>
    <Reference Include="Facepunch.Steamworks">
      <HintPath>libs\Facepunch.Steamworks.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="HGCSharpUtils">
      <HintPath>libs\HGCSharpUtils.dll</HintPath>
    </Reference>
    <Reference Include="HGUnityUtils">
      <HintPath>libs\HGUnityUtils.dll</HintPath>
    </Reference>
    <Reference Include="KinematicCharacterController">
      <HintPath>libs\KinematicCharacterController.dll</HintPath>
    </Reference>
    <Reference Include="LegacyResourcesAPI">
      <HintPath>libs\LegacyResourcesAPI.dll</HintPath>
    </Reference>
    <Reference Include="MMHOOK_RoR2">
      <HintPath>libs\MMHOOK_RoR2.dll</HintPath>
    </Reference>
    <Reference Include="Mono.Cecil">
      <HintPath>libs\Mono.Cecil.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Mono.Cecil.Mdb">
      <HintPath>libs\Mono.Cecil.Mdb.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Mono.Cecil.Pdb">
      <HintPath>libs\Mono.Cecil.Pdb.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Mono.Cecil.Rocks">
      <HintPath>libs\Mono.Cecil.Rocks.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="MonoMod">
      <HintPath>libs\MonoMod.exe</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="MonoMod.RuntimeDetour">
      <HintPath>libs\MonoMod.RuntimeDetour.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="MonoMod.Utils">
      <HintPath>libs\MonoMod.Utils.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="R2API">
      <HintPath>libs\R2API.dll</HintPath>
    </Reference>
    <Reference Include="R2API.ContentManagement">
      <HintPath>libs\R2API.ContentManagement.dll</HintPath>
    </Reference>
    <Reference Include="R2API.Core">
      <HintPath>libs\R2API.Core.dll</HintPath>
    </Reference>
    <Reference Include="R2API.DamageType">
      <HintPath>libs\R2API.DamageType.dll</HintPath>
    </Reference>
    <Reference Include="R2API.Language">
      <HintPath>libs\R2API.Language.dll</HintPath>
    </Reference>
    <Reference Include="R2API.Prefab">
      <HintPath>libs\R2API.Prefab.dll</HintPath>
    </Reference>
    <Reference Include="R2API.Sound">
      <HintPath>libs\R2API.Sound.dll</HintPath>
    </Reference>
    <Reference Include="Rewired_Core">
      <HintPath>libs\Rewired_Core.dll</HintPath>
    </Reference>
    <Reference Include="RideMeExtended">
      <HintPath>libs\RideMeExtended.dll</HintPath>
    </Reference>
    <Reference Include="RoR2">
      <HintPath>libs\RoR2.dll</HintPath>
    </Reference>
    <Reference Include="Skills">
      <HintPath>libs\Skills.dll</HintPath>
    </Reference>
    <Reference Include="Unity.Addressables">
      <HintPath>libs\Unity.Addressables.dll</HintPath>
    </Reference>
    <Reference Include="Unity.Postprocessing.Runtime">
      <HintPath>libs\Unity.Postprocessing.Runtime.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Unity.ResourceManager">
      <HintPath>libs\Unity.ResourceManager.dll</HintPath>
    </Reference>
    <Reference Include="Unity.TextMeshPro">
      <HintPath>libs\Unity.TextMeshPro.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine">
      <HintPath>libs\UnityEngine.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.AnimationModule">
      <HintPath>libs\UnityEngine.AnimationModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.AssetBundleModule">
      <HintPath>libs\UnityEngine.AssetBundleModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>libs\UnityEngine.CoreModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.DirectorModule">
      <HintPath>libs\UnityEngine.DirectorModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.ParticleSystemModule">
      <HintPath>libs\UnityEngine.ParticleSystemModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.PhysicsModule">
      <HintPath>libs\UnityEngine.PhysicsModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>libs\UnityEngine.UI.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.UIModule">
      <HintPath>libs\UnityEngine.UIModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.UNETModule">
      <HintPath>libs\UnityEngine.UNETModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Zio">
      <HintPath>libs\Zio.dll</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="REM First we copy the from the output folder to the NetworkWeaver folder.&#xD;&#xA;REM We store the output from robocopy in a file called robocopy which we'll delete at the end of the file.&#xD;&#xA;robocopy $(TargetDir) $(ProjectDir)\NetworkWeaver $(TargetFileName) &gt; $(TargetDir)Robocopy&#xD;&#xA;REM Then we navigate our script to the NetworkWeaver folder to make the follow up line less verbose.&#xD;&#xA;cd $(ProjectDir)\NetworkWeaver&#xD;&#xA;REM Unity.UNetWeaver.exe {path to Coremodule} {Path to Networking} {Path to output folder} {Path to the dll you want patched} {Path to all needed references for the to-be-patched dll}&#xD;&#xA;Unity.UNetWeaver.exe &quot;..\libs\UnityEngine.CoreModule.dll&quot; &quot;..\libs\com.unity.multiplayer-hlapi.Runtime.dll&quot; &quot;Patched/&quot;  $(TargetFileName) &quot;$(ProjectDir)\libs&quot;&#xD;&#xA;REM We store the prepatched dll disabled as a .prepatch so that you can check it if you want, but first we need to make sure that file doesn't exist already.&#xD;&#xA;IF EXIST $(TargetFileName).prepatch (&#xD;&#xA;DEL /F $(TargetFileName).prepatch&#xD;&#xA;)&#xD;&#xA;REM Then we rename the prepatched file to bla.dll.prepatch&#xD;&#xA;ren $(TargetFileName) $(TargetFileName).prepatch&#xD;&#xA;REM move our script to the Patched Folder&#xD;&#xA;cd Patched&#xD;&#xA;REM move from the current directory (.) to the projectDirectory and store the output once more to the Robocopy file.&#xD;&#xA;robocopy . $(ProjectDir)  $(TargetFileName) &gt; $(TargetDir)Robocopy&#xD;&#xA;REM Remove the patched file from the Patched folder, because the Weaver won't run if the file already exists.&#xD;&#xA;del  $(TargetFileName)&#xD;&#xA;REM Delete the holder for all robocopy output.&#xD;&#xA;del $(TargetDir)Robocopy" />
  </Target>

</Project>
